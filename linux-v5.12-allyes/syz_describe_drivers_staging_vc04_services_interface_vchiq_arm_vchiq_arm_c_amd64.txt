# Copyright 2018 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

# Code generated by SyzDescribe. DO NOT EDIT.
# Code generated from linux v5.12

meta arches["amd64"]

# driver found at module init function vchiq_driver_init() in https://elixir.bootlin.com/linux/v5.12/source/drivers/staging/vc04_services/interface/vchiq_arm/vchiq_arm.c#L2803
# call chain: 
# 00: https://elixir.bootlin.com/linux/v5.12/source/drivers/staging/vc04_services/interface/vchiq_arm/vchiq_arm.c#L2819
# 01: https://elixir.bootlin.com/linux/v5.12/source/drivers/staging/vc04_services/interface/vchiq_arm/vchiq_arm.c#L2748

resource fd_10656740925194166300_fd[fd]

# device file name in https://elixir.bootlin.com/linux/v5.12/source/drivers/staging/gasket/gasket_core.c#L230
openat$syz_describe_10656740925194166300_open_0(fd const[AT_FDCWD], file ptr[in, string["/dev/"]], flags flags[open_flags], mode const[0]) fd_10656740925194166300_fd
# device file name in https://elixir.bootlin.com/linux/v5.12/source/drivers/staging/fieldbus/dev_core.c#L286
syz_open_dev$syz_describe_10656740925194166300_open_1(dev ptr[in, string["/dev/fieldbus_dev#"]], id intptr, flags flags[open_flags]) fd_10656740925194166300_fd
# device file name in https://elixir.bootlin.com/linux/v5.12/source/drivers/staging/pi433/pi433_if.c#L1201
syz_open_dev$syz_describe_10656740925194166300_open_2(dev ptr[in, string["/dev/pi433.#"]], id intptr, flags flags[open_flags]) fd_10656740925194166300_fd
# device file name in https://elixir.bootlin.com/linux/v5.12/source/drivers/staging/vc04_services/interface/vchiq_arm/vchiq_arm.c#L2757
openat$syz_describe_10656740925194166300_open_3(fd const[AT_FDCWD], file ptr[in, string["/dev/vchiq"]], flags flags[open_flags], mode const[0]) fd_10656740925194166300_fd

# syscall handler structure in https://elixir.bootlin.com/linux/v5.12/source/drivers/staging/vc04_services/interface/vchiq_arm/vchiq_arm.c#L2748
ioctl$syz_describe_10656740925194166300_196(fd fd_10656740925194166300_fd, cmd const[196], arg intptr)
ioctl$syz_describe_10656740925194166300_50176(fd fd_10656740925194166300_fd, cmd const[50176], arg intptr)
ioctl$syz_describe_10656740925194166300_50177(fd fd_10656740925194166300_fd, cmd const[50177], arg intptr)
ioctl$syz_describe_10656740925194166300_50179(fd fd_10656740925194166300_fd, cmd const[50179], arg intptr)
ioctl$syz_describe_10656740925194166300_50185(fd fd_10656740925194166300_fd, cmd const[50185], arg intptr)
ioctl$syz_describe_10656740925194166300_50187(fd fd_10656740925194166300_fd, cmd const[50187], arg intptr)
ioctl$syz_describe_10656740925194166300_50188(fd fd_10656740925194166300_fd, cmd const[50188], arg intptr)
ioctl$syz_describe_10656740925194166300_50189(fd fd_10656740925194166300_fd, cmd const[50189], arg intptr)
ioctl$syz_describe_10656740925194166300_50192(fd fd_10656740925194166300_fd, cmd const[50192], arg intptr)
ioctl$syz_describe_10656740925194166300_50193(fd fd_10656740925194166300_fd, cmd const[50193], arg intptr)
ioctl$syz_describe_10656740925194166300_1074578446(fd fd_10656740925194166300_fd, cmd const[1074578446], arg intptr)
ioctl$syz_describe_10656740925194166300_1074840580(fd fd_10656740925194166300_fd, cmd const[1074840580], arg intptr)
ioctl$syz_describe_10656740925194166300_3222324234(fd fd_10656740925194166300_fd, cmd const[3222324234], arg intptr)
ioctl$syz_describe_10656740925194166300_3222848520(fd fd_10656740925194166300_fd, cmd const[3222848520], arg intptr)
ioctl$syz_describe_10656740925194166300_3223372807(fd fd_10656740925194166300_fd, cmd const[3223372807], arg intptr)
ioctl$syz_describe_10656740925194166300_3223897093(fd fd_10656740925194166300_fd, cmd const[3223897093], arg intptr)
ioctl$syz_describe_10656740925194166300_3223897094(fd fd_10656740925194166300_fd, cmd const[3223897094], arg intptr)
ioctl$syz_describe_10656740925194166300_3224421378(fd fd_10656740925194166300_fd, cmd const[3224421378], arg intptr)

