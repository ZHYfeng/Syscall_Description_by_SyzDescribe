# Copyright 2018 syzkaller project authors. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

# Code generated by SyzDescribe. DO NOT EDIT.
# Code generated from linux v5.12

meta arches["amd64"]

# driver found at module init function init_autofs_fs() in https://elixir.bootlin.com/linux/v5.12/source/fs/autofs/init.c#L25
# call chain: 
# 00: https://elixir.bootlin.com/linux/v5.12/source/fs/autofs/init.c#L29
# 01: https://elixir.bootlin.com/linux/v5.12/source/fs/autofs/dev-ioctl.c#L729

resource fd_16516372306172143176_fd[fd]

# device file name in https://elixir.bootlin.com/linux/v5.12/source/fs/autofs/dev-ioctl.c#L729
openat$syz_describe_16516372306172143176_open_0(fd const[AT_FDCWD], file ptr[in, string["/dev/autofs"]], flags flags[open_flags], mode const[0]) fd_16516372306172143176_fd
# device file name in https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/probe.c#L913
openat$syz_describe_16516372306172143176_open_1(fd const[AT_FDCWD], file ptr[in, string["/dev/pci4x:2x"]], flags flags[open_flags], mode const[0]) fd_16516372306172143176_fd
# device file name in https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/probe.c#L936
openat$syz_describe_16516372306172143176_open_2(fd const[AT_FDCWD], file ptr[in, string["/dev/4x:2x"]], flags flags[open_flags], mode const[0]) fd_16516372306172143176_fd
# device file name in https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/probe.c#L913
openat$syz_describe_16516372306172143176_open_3(fd const[AT_FDCWD], file ptr[in, string["/dev/pci4x:2x"]], flags flags[open_flags], mode const[0]) fd_16516372306172143176_fd
# device file name in https://elixir.bootlin.com/linux/v5.12/source/drivers/pci/probe.c#L936
openat$syz_describe_16516372306172143176_open_4(fd const[AT_FDCWD], file ptr[in, string["/dev/4x:2x"]], flags flags[open_flags], mode const[0]) fd_16516372306172143176_fd

# syscall handler structure in https://elixir.bootlin.com/linux/v5.12/source/fs/autofs/dev-ioctl.c#L729
ioctl$syz_describe_16516372306172143176_113_0(fd fd_16516372306172143176_fd, cmd const[113], arg ptr[in, struct_autofs_dev_ioctl_16516372306172143176])
ioctl$syz_describe_16516372306172143176_113_1(fd fd_16516372306172143176_fd, cmd const[113], arg ptr[in, struct_autofs_dev_ioctl_16516372306172143176])
ioctl$syz_describe_16516372306172143176_116(fd fd_16516372306172143176_fd, cmd const[116], arg intptr)
ioctl$syz_describe_16516372306172143176_123(fd fd_16516372306172143176_fd, cmd const[123], arg intptr)
ioctl$syz_describe_16516372306172143176_126(fd fd_16516372306172143176_fd, cmd const[126], arg intptr)
ioctl$syz_describe_16516372306172143176_147(fd fd_16516372306172143176_fd, cmd const[147], arg intptr)

struct_anon_1_16516372306172143176 {
    field_0    int64
}
union_anon_16516372306172143176 {
    field_0    struct_anon_1_16516372306172143176
}
struct_autofs_dev_ioctl_16516372306172143176 {
    field_0    int32
    field_1    int32
    field_2    int32
    field_3    int32
    field_4    union_anon_16516372306172143176
    field_5    array[int8]
}
